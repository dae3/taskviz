<h1>taskviz</h1>
<script type="text/javascript">
    function pText(task) { return task.task }

    const colorForContext = new Map()
    colorForContext.set('@Office', "red")
    colorForContext.set('@Outside', "yellow")
    colorForContext.set('@Waiting', "brown")
    colorForContext.set('@Katoomba', "purple")
    colorForContext.set('@Shops', "purple")
    colorForContext.set('@Phone', "orange")
    colorForContext.set('@Online', "green")
    colorForContext.set('@Online-Work', "green")
    colorForContext.set('@Home', "blue")
    function getColorForContext(task) {
	if (colorForContext.has(task.context)) {
	    return colorForContext.get(task.context)
	} else {
	    console.log(`No colour map for ${task.context}`)
	    return "black"
	}
    }

    async function load(){
	const data = await d3.json('/data')

	console.log(`${data.length} tasks loaded`)

	var task = d3.select("body").select("div#viz").selectAll("span.bit")
	    .data(
		data
		.filter(t=>t.context)
		.map(t=>{ t.date = makeDate(t.date); return t })
		.sort(t=>t.date)
	    )
	    .classed("bit", true)
	    .style("background-color", getColorForContext)
	    .text(pText)

	task.enter().append("span")
	    .classed("bit", true)
	    .style("background-color", getColorForContext)
	    .text(pText)

	task.exit().remove()

    }

    load()

    function makeDate(dateString) {
	const [_, year, month, day] =  dateString.match(/(\d{4})-(\d{2})-(\d{2})/)
	if (!_) { throw new Error(`${dateString} doesn't look like a date`)}
	return new Date(year, month-1, day)
    }
</script>
<style type="text/css">
body { font-family: sans-serif; }
span.bit { writing-mode: vertical-rl; height: 100%; display: inline-block; transform: rotate(180deg);}
div#viz { height: 500px; width: 100%; margin: auto; overflow-x: scroll; white-space: nowrap;}
</style>
<div id="viz">
    <span class="bit" />
</div>
